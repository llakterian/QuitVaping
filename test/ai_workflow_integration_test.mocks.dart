// Mocks generated by Mockito 5.4.4 from annotations
// in quit_vaping/test/ai_workflow_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quit_vaping/data/models/mcp_model.dart' as _i4;
import 'package:quit_vaping/data/services/mcp_manager_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMCPResponse_0 extends _i1.SmartFake implements _i4.MCPResponse {
  _FakeMCPResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MCPManagerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMCPManagerService extends _i1.Mock implements _i2.MCPManagerService {
  MockMCPManagerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.MCPResponse> getHealthRecoveryTimeline(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHealthRecoveryTimeline,
          [userId],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #getHealthRecoveryTimeline,
            [userId],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> generateMotivationContent(
          _i4.AIWorkflowContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateMotivationContent,
          [context],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #generateMotivationContent,
            [context],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> createInterventionPlan(
          _i4.AIWorkflowContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #createInterventionPlan,
          [context],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #createInterventionPlan,
            [context],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> analyzeUserPatterns(
    String? userId,
    List<_i4.UserActivity>? activities,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #analyzeUserPatterns,
          [
            userId,
            activities,
          ],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #analyzeUserPatterns,
            [
              userId,
              activities,
            ],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> matchCommunityPeers(
    String? userId,
    Map<String, dynamic>? preferences,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchCommunityPeers,
          [
            userId,
            preferences,
          ],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #matchCommunityPeers,
            [
              userId,
              preferences,
            ],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> getNRTProtocols(
    String? userId,
    Map<String, dynamic>? userProfile,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNRTProtocols,
          [
            userId,
            userProfile,
          ],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #getNRTProtocols,
            [
              userId,
              userProfile,
            ],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> createProgressReport(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProgressReport,
          [userId],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #createProgressReport,
            [userId],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);

  @override
  _i3.Future<_i4.MCPResponse> predictQuitSuccess(
    String? userId,
    List<_i4.UserActivity>? recentActivity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #predictQuitSuccess,
          [
            userId,
            recentActivity,
          ],
        ),
        returnValue: _i3.Future<_i4.MCPResponse>.value(_FakeMCPResponse_0(
          this,
          Invocation.method(
            #predictQuitSuccess,
            [
              userId,
              recentActivity,
            ],
          ),
        )),
      ) as _i3.Future<_i4.MCPResponse>);
}